version: "2.4"
services:
  # transmission:
  #   container_name: transmission
  #   image: haugene/transmission-openvpn
  #   restart: always
  #   cap_add:
  #     - NET_ADMIN # required to modify network interfaces
  #   networks:
  #     medianet:
  #       ipv4_address: 172.27.0.7
  #   dns:
  #     - 8.8.8.8
  #     - 8.8.4.4
  #   environment:
  #     - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
  #     - OPENVPN_CONFIG=${OPENVPN_CONFIG}
  #     - OPENVPN_USERNAME=${OPENVPN_USERNAME}
  #     - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
  #     - LOCAL_NETWORK=${LOCAL_NETWORK}
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - TRANSMISSION_WEB_UI=flood-for-transmission
  #   volumes:
  #     - ${HOST}/data/torrents:/data
  #     - ${HOST}/docker/appdata/transmission/:/data/transmission-home
  #   ports:
  #     - 9091:9091
  #   sysctls:
  #     - "net.ipv6.conf.all.disable_ipv6=0" # required for mullvad

  # jackett:
  #   container_name: jackett
  #   image: linuxserver/jackett:latest
  #   restart: unless-stopped
  #   networks:
  #     medianet:
  #       ipv4_address: 172.27.0.2
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ${HOST}/docker/appdata/jackett:/config
  #   ports:
  #     - 9117:9117

  nzbget:
    container_name: nzbget
    image: linuxserver/nzbget:latest
    restart: unless-stopped
    networks:
      medianet:
        ipv4_address: 172.27.0.3
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${HOST}/docker/appdata/nzbget:/config
      - ${HOST}/data/usenet:/data/usenet
    ports:
      - 6789:6789

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    networks:
      medianet:
        ipv4_address: 172.27.0.4
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${HOST}/docker/appdata/sonarr:/config
      - ${HOST}/data:/data
    ports:
      - 8989:8989

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    networks:
      medianet:
        ipv4_address: 172.27.0.5
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${HOST}/docker/appdata/radarr:/config
      - ${HOST}/data:/data
    ports:
      - 7878:7878

  jellyfin:
    container_name: jellyfin
    image: linuxserver/jellyfin
    restart: unless-stopped
    networks:
      medianet:
        ipv4_address: 172.27.0.6
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${HOST}/docker/appdata/jellyfin:/config
      - ${HOST}/data/media:/data
    ports:
      - 8096:8096
    devices:
      - /dev/dri:/dev/dri # requried for hardward acceleration

  jfa-go:
    container_name: jfa-go
    image: hrfee/jfa-go
    restart: unless-stopped
    networks:
      medianet:
        ipv4_address: 172.27.0.8
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${HOST}/docker/appdata/jellyfin:/jf
      - ${HOST}/docker/appdata/jfa_go:/data
    ports:
      - 8056:8056

  ombi:
    container_name: ombi
    image: linuxserver/ombi
    restart: unless-stopped
    networks:
      medianet:
        ipv4_address: 172.27.0.9
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${HOST}/docker/appdata/ombi:/config
    ports:
      - 3579:3579

networks:
  medianet:
    driver: bridge
    # Need static IPs for containers for Synology firewall
    # and so they can talk to each other via IP
    ipam:
      driver: default
      config:
        - subnet: 172.27.0.0/16
          gateway: 172.27.0.1
